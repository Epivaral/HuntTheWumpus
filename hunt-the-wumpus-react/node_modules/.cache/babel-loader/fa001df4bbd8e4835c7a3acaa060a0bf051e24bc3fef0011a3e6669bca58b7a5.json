{"ast":null,"code":"var _jsxFileName = \"/workspaces/HuntTheWumpus/hunt-the-wumpus-react/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Board from './components/Board';\nimport Stats from './components/Stats';\nimport Controls from './components/Controls';\nimport { createNewGame, createAgentState, agentStep } from './utils/gameLogic';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [game, setGame] = React.useState(() => {\n    const g = createNewGame();\n    g.agentState = createAgentState(g.agentPos);\n    return g;\n  });\n  const [mode, setMode] = React.useState('auto');\n  const [autoRunning, setAutoRunning] = React.useState(false);\n  const [log, setLog] = React.useState(game.actionLog || []);\n  React.useEffect(() => {\n    setLog(game.actionLog || []);\n  }, [game]);\n  const handleNewGame = () => {\n    const g = createNewGame();\n    g.agentState = createAgentState(g.agentPos);\n    setGame(g);\n    setAutoRunning(false);\n  };\n  const handleToggleMode = () => {\n    setMode(m => m === 'auto' ? 'manual' : 'auto');\n    setAutoRunning(false);\n  };\n  const handleStep = () => {\n    setGame(prev => agentStep({\n      ...prev,\n      agentState: prev.agentState\n    }));\n  };\n\n  // Auto play effect\n  React.useEffect(() => {\n    if (mode === 'auto' && autoRunning && game.status === 'playing') {\n      const t = setTimeout(() => handleStep(), 200);\n      return () => clearTimeout(t);\n    }\n  }, [mode, autoRunning, game]);\n  const handleAutoPlay = () => {\n    setAutoRunning(r => !r);\n  };\n\n  // Manual move handler\n  const handleManualMove = (dx, dy) => {\n    setGame(prev => {\n      if (prev.status !== 'playing') return prev;\n      const {\n        agentPos,\n        board,\n        agentState\n      } = prev;\n      const x = agentPos.x + dx;\n      const y = agentPos.y + dy;\n      if (x < 0 || x >= 20 || y < 0 || y >= 20) return prev;\n      // Don't allow move if not adjacent\n      // Move agent\n      const newBoard = board.map((row, j) => row.map((cell, i) => {\n        if (i === agentPos.x && j === agentPos.y) return {\n          ...cell,\n          type: 'empty'\n        };\n        if (i === x && j === y) return {\n          ...cell,\n          type: 'agent',\n          explored: true\n        };\n        return cell;\n      }));\n      const newExplored = prev.explored.map((row, j) => row.map((val, i) => i === x && j === y ? true : val));\n      let log = prev.actionLog ? [...prev.actionLog] : [];\n      log.push(`Agent moved to (${x + 1},${y + 1})`);\n      // Check for gold\n      if (x === prev.goldPos.x && y === prev.goldPos.y) {\n        log.push('Agent found the gold! WON!');\n        return {\n          ...prev,\n          agentPos: {\n            x,\n            y\n          },\n          board: newBoard,\n          explored: newExplored,\n          status: 'won',\n          actionLog: log\n        };\n      }\n      // Check for threats\n      const cellType = prev.board[y][x].type;\n      if (cellType === 'pit') {\n        log.push('Agent fell into a pit at this cell. Lost!');\n        return {\n          ...prev,\n          agentPos: {\n            x,\n            y\n          },\n          board: newBoard,\n          explored: newExplored,\n          status: 'lost',\n          actionLog: log\n        };\n      }\n      if (cellType === 'wumpus') {\n        log.push('Agent encountered the Wumpus at this cell. Lost!');\n        return {\n          ...prev,\n          agentPos: {\n            x,\n            y\n          },\n          board: newBoard,\n          explored: newExplored,\n          status: 'lost',\n          actionLog: log\n        };\n      }\n      if (cellType === 'bat') {\n        // Bat: teleport to random empty cell\n        const empties = [];\n        for (let j = 0; j < 20; j++) for (let i = 0; i < 20; i++) if (prev.board[j][i].type === 'empty') empties.push({\n          x: i,\n          y: j\n        });\n        if (empties.length > 0) {\n          const idx = Math.floor(Math.random() * empties.length);\n          const nx = empties[idx].x,\n            ny = empties[idx].y;\n          const teleBoard = newBoard.map((row, j) => row.map((cell, i) => {\n            if (i === nx && j === ny) return {\n              ...cell,\n              type: 'agent',\n              explored: true\n            };\n            if (i === x && j === y) return {\n              ...cell,\n              type: 'empty'\n            };\n            return cell;\n          }));\n          const teleExplored = newExplored.map((row, j) => row.map((val, i) => i === nx && j === ny ? true : val));\n          log.push(`Agent was carried by bats from (${x + 1},${y + 1}) to (${nx + 1},${ny + 1})!`);\n          return {\n            ...prev,\n            agentPos: {\n              x: nx,\n              y: ny\n            },\n            board: teleBoard,\n            explored: teleExplored,\n            actionLog: log\n          };\n        }\n      }\n      // Sensory messages\n      const adj = [[0, -1], [1, 0], [0, 1], [-1, 0]];\n      let adjWumpus = false,\n        adjPits = 0,\n        adjBats = 0;\n      for (const [dx2, dy2] of adj) {\n        const nx = x + dx2,\n          ny = y + dy2;\n        if (nx < 0 || nx >= 20 || ny < 0 || ny >= 20) continue;\n        const t = prev.board[ny][nx].type;\n        if (t === 'wumpus') adjWumpus = true;\n        if (t === 'pit') adjPits++;\n        if (t === 'bat') adjBats++;\n      }\n      if (adjWumpus) log.push('You smell something terrible nearby.');\n      if (adjPits) log.push('You feel a breeze nearby.');\n      if (adjBats) log.push('You hear flapping nearby.');\n      return {\n        ...prev,\n        agentPos: {\n          x,\n          y\n        },\n        board: newBoard,\n        explored: newExplored,\n        actionLog: log\n      };\n    });\n  };\n\n  // Manual shoot handler\n  const handleManualShoot = () => {\n    setGame(prev => {\n      var _agentState$arrows;\n      if (prev.status !== 'playing') return prev;\n      const {\n        agentPos,\n        board,\n        agentState\n      } = prev;\n      let arrows = (_agentState$arrows = agentState === null || agentState === void 0 ? void 0 : agentState.arrows) !== null && _agentState$arrows !== void 0 ? _agentState$arrows : 3;\n      if (arrows <= 0) return prev;\n      let log = prev.actionLog ? [...prev.actionLog] : [];\n      // Shoot in all 4 directions, hit if Wumpus is adjacent\n      const adj = [[0, -1], [1, 0], [0, 1], [-1, 0]];\n      let hit = false;\n      let wx = -1,\n        wy = -1;\n      for (const [dx, dy] of adj) {\n        const nx = agentPos.x + dx,\n          ny = agentPos.y + dy;\n        if (nx < 0 || nx >= 20 || ny < 0 || ny >= 20) continue;\n        if (prev.board[ny][nx].type === 'wumpus') {\n          hit = true;\n          wx = nx;\n          wy = ny;\n          break;\n        }\n      }\n      arrows--;\n      log.push(`Agent shoots an arrow. Arrows left: ${arrows}`);\n      if (hit) {\n        // Remove Wumpus\n        const newBoard = board.map((row, j) => row.map((cell, i) => i === wx && j === wy ? {\n          ...cell,\n          type: 'empty'\n        } : cell));\n        log.push('Agent killed the Wumpus! WON!');\n        return {\n          ...prev,\n          board: newBoard,\n          status: 'won',\n          actionLog: log,\n          agentState: agentState ? {\n            ...agentState,\n            arrows\n          } : undefined\n        };\n      } else {\n        log.push('Agent missed.');\n        return {\n          ...prev,\n          actionLog: log,\n          agentState: agentState ? {\n            ...agentState,\n            arrows\n          } : undefined\n        };\n      }\n    });\n  };\n\n  // Keyboard event handler\n  React.useEffect(() => {\n    if (mode !== 'manual' || game.status !== 'playing') return;\n    const handleKeyDown = e => {\n      if (e.repeat) return;\n      if (e.key === 'ArrowUp') handleManualMove(0, -1);else if (e.key === 'ArrowDown') handleManualMove(0, 1);else if (e.key === 'ArrowLeft') handleManualMove(-1, 0);else if (e.key === 'ArrowRight') handleManualMove(1, 0);else if (e.code === 'Space') handleManualShoot();\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [mode, game.status]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      minHeight: '100vh',\n      width: '100vw',\n      alignItems: 'stretch'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'flex-start',\n        width: '100%',\n        margin: '8px 0 0 0',\n        paddingLeft: 32\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          fontSize: 28,\n          margin: 0,\n          flex: '0 0 auto'\n        },\n        children: \"Hunt the Wumpus\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'row',\n          alignItems: 'center',\n          marginLeft: 32,\n          gap: 12\n        },\n        children: [/*#__PURE__*/_jsxDEV(Controls, {\n          onNewGame: handleNewGame,\n          onToggleMode: handleToggleMode,\n          mode: mode,\n          onStep: mode === 'auto' ? handleStep : undefined,\n          canStep: game.status === 'playing'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), mode === 'auto' && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAutoPlay,\n          disabled: game.status !== 'playing',\n          style: {\n            minWidth: 120,\n            height: 28,\n            fontSize: 15,\n            borderRadius: 4,\n            marginLeft: 4,\n            marginRight: 4,\n            padding: '0 12px',\n            boxSizing: 'border-box',\n            verticalAlign: 'middle'\n          },\n          children: autoRunning ? 'Pause Auto' : 'Auto Play'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'center',\n        alignItems: 'center',\n        flex: 1,\n        width: '100%',\n        marginTop: 0\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: '0 0 auto',\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          marginRight: 32\n        },\n        children: /*#__PURE__*/_jsxDEV(Stats, {\n          game: game\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: '0 0 auto',\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(Board, {\n          game: game\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: '0 0 auto',\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          marginLeft: 32\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            background: '#222',\n            color: '#fff',\n            marginTop: 0,\n            padding: 12,\n            borderRadius: 8,\n            maxHeight: 400,\n            overflowY: 'auto',\n            fontSize: 14,\n            minWidth: 340,\n            width: 340\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Action Log:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            style: {\n              margin: 0,\n              paddingLeft: 18\n            },\n            children: log.slice(-18).map((entry, i) => {\n              let color = '#fff';\n              if (/WON!|killed the Wumpus|found the gold/i.test(entry)) color = '#00e676'; // green\n              else if (/Lost!|fell into a pit|encountered the Wumpus/i.test(entry)) color = '#ff7043'; // orange/red\n              else if (/warning|breeze|smell|hear flapping/i.test(entry)) color = '#b388ff'; // purple\n              else if (/shoots|arrow|teleport|carried by bats/i.test(entry)) color = '#4fc3f7'; // light blue\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                style: {\n                  color\n                },\n                children: entry\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"zpCme7tW6B9gZjk+4CpjNKQLcpI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Board","Stats","Controls","createNewGame","createAgentState","agentStep","jsxDEV","_jsxDEV","App","_s","game","setGame","useState","g","agentState","agentPos","mode","setMode","autoRunning","setAutoRunning","log","setLog","actionLog","useEffect","handleNewGame","handleToggleMode","m","handleStep","prev","status","t","setTimeout","clearTimeout","handleAutoPlay","r","handleManualMove","dx","dy","board","x","y","newBoard","map","row","j","cell","i","type","explored","newExplored","val","push","goldPos","cellType","empties","length","idx","Math","floor","random","nx","ny","teleBoard","teleExplored","adj","adjWumpus","adjPits","adjBats","dx2","dy2","handleManualShoot","_agentState$arrows","arrows","hit","wx","wy","undefined","handleKeyDown","e","repeat","key","code","window","addEventListener","removeEventListener","className","style","display","flexDirection","minHeight","width","alignItems","children","justifyContent","margin","paddingLeft","fontSize","flex","fileName","_jsxFileName","lineNumber","columnNumber","marginLeft","gap","onNewGame","onToggleMode","onStep","canStep","onClick","disabled","minWidth","height","borderRadius","marginRight","padding","boxSizing","verticalAlign","marginTop","background","color","maxHeight","overflowY","slice","entry","test","_c","$RefreshReg$"],"sources":["/workspaces/HuntTheWumpus/hunt-the-wumpus-react/src/App.tsx"],"sourcesContent":["import React from 'react';\nimport Board from './components/Board';\nimport Stats from './components/Stats';\nimport Controls from './components/Controls';\nimport { createNewGame, createAgentState, agentStep } from './utils/gameLogic';\nimport { GameState } from './utils/gameTypes';\nimport './App.css';\n\nconst App: React.FC = () => {\n  const [game, setGame] = React.useState<GameState>(() => {\n    const g = createNewGame();\n    g.agentState = createAgentState(g.agentPos);\n    return g;\n  });\n  const [mode, setMode] = React.useState<'auto' | 'manual'>('auto');\n  const [autoRunning, setAutoRunning] = React.useState(false);\n  const [log, setLog] = React.useState<string[]>(game.actionLog || []);\n\n  React.useEffect(() => {\n    setLog(game.actionLog || []);\n  }, [game]);\n\n  const handleNewGame = () => {\n    const g = createNewGame();\n    g.agentState = createAgentState(g.agentPos);\n    setGame(g);\n    setAutoRunning(false);\n  };\n\n  const handleToggleMode = () => {\n    setMode((m) => (m === 'auto' ? 'manual' : 'auto'));\n    setAutoRunning(false);\n  };\n\n  const handleStep = () => {\n    setGame((prev) => agentStep({ ...prev, agentState: prev.agentState }));\n  };\n\n  // Auto play effect\n  React.useEffect(() => {\n    if (mode === 'auto' && autoRunning && game.status === 'playing') {\n      const t = setTimeout(() => handleStep(), 200);\n      return () => clearTimeout(t);\n    }\n  }, [mode, autoRunning, game]);\n\n  const handleAutoPlay = () => {\n    setAutoRunning((r) => !r);\n  };\n\n  // Manual move handler\n  const handleManualMove = (dx: number, dy: number) => {\n    setGame((prev) => {\n      if (prev.status !== 'playing') return prev;\n      const { agentPos, board, agentState } = prev;\n      const x = agentPos.x + dx;\n      const y = agentPos.y + dy;\n      if (x < 0 || x >= 20 || y < 0 || y >= 20) return prev;\n      // Don't allow move if not adjacent\n      // Move agent\n      const newBoard = board.map((row, j) =>\n        row.map((cell, i) => {\n          if (i === agentPos.x && j === agentPos.y) return { ...cell, type: 'empty' as const };\n          if (i === x && j === y) return { ...cell, type: 'agent' as const, explored: true };\n          return cell;\n        })\n      );\n      const newExplored = prev.explored.map((row, j) =>\n        row.map((val, i) => (i === x && j === y ? true : val))\n      );\n      let log = prev.actionLog ? [...prev.actionLog] : [];\n      log.push(`Agent moved to (${x + 1},${y + 1})`);\n      // Check for gold\n      if (x === prev.goldPos.x && y === prev.goldPos.y) {\n        log.push('Agent found the gold! WON!');\n        return { ...prev, agentPos: { x, y }, board: newBoard, explored: newExplored, status: 'won', actionLog: log };\n      }\n      // Check for threats\n      const cellType = prev.board[y][x].type;\n      if (cellType === 'pit') {\n        log.push('Agent fell into a pit at this cell. Lost!');\n        return { ...prev, agentPos: { x, y }, board: newBoard, explored: newExplored, status: 'lost', actionLog: log };\n      }\n      if (cellType === 'wumpus') {\n        log.push('Agent encountered the Wumpus at this cell. Lost!');\n        return { ...prev, agentPos: { x, y }, board: newBoard, explored: newExplored, status: 'lost', actionLog: log };\n      }\n      if (cellType === 'bat') {\n        // Bat: teleport to random empty cell\n        const empties: { x: number; y: number }[] = [];\n        for (let j = 0; j < 20; j++) for (let i = 0; i < 20; i++)\n          if (prev.board[j][i].type === 'empty') empties.push({ x: i, y: j });\n        if (empties.length > 0) {\n          const idx = Math.floor(Math.random() * empties.length);\n          const nx = empties[idx].x, ny = empties[idx].y;\n          const teleBoard = newBoard.map((row, j) =>\n            row.map((cell, i) => {\n              if (i === nx && j === ny) return { ...cell, type: 'agent' as const, explored: true };\n              if (i === x && j === y) return { ...cell, type: 'empty' as const };\n              return cell;\n            })\n          );\n          const teleExplored = newExplored.map((row, j) =>\n            row.map((val, i) => (i === nx && j === ny ? true : val))\n          );\n          log.push(`Agent was carried by bats from (${x + 1},${y + 1}) to (${nx + 1},${ny + 1})!`);\n          return { ...prev, agentPos: { x: nx, y: ny }, board: teleBoard, explored: teleExplored, actionLog: log };\n        }\n      }\n      // Sensory messages\n      const adj = [\n        [0, -1], [1, 0], [0, 1], [-1, 0]\n      ];\n      let adjWumpus = false, adjPits = 0, adjBats = 0;\n      for (const [dx2, dy2] of adj) {\n        const nx = x + dx2, ny = y + dy2;\n        if (nx < 0 || nx >= 20 || ny < 0 || ny >= 20) continue;\n        const t = prev.board[ny][nx].type;\n        if (t === 'wumpus') adjWumpus = true;\n        if (t === 'pit') adjPits++;\n        if (t === 'bat') adjBats++;\n      }\n      if (adjWumpus) log.push('You smell something terrible nearby.');\n      if (adjPits) log.push('You feel a breeze nearby.');\n      if (adjBats) log.push('You hear flapping nearby.');\n      return { ...prev, agentPos: { x, y }, board: newBoard, explored: newExplored, actionLog: log };\n    });\n  };\n\n  // Manual shoot handler\n  const handleManualShoot = () => {\n    setGame((prev) => {\n      if (prev.status !== 'playing') return prev;\n      const { agentPos, board, agentState } = prev;\n      let arrows = agentState?.arrows ?? 3;\n      if (arrows <= 0) return prev;\n      let log = prev.actionLog ? [...prev.actionLog] : [];\n      // Shoot in all 4 directions, hit if Wumpus is adjacent\n      const adj = [\n        [0, -1], [1, 0], [0, 1], [-1, 0]\n      ];\n      let hit = false;\n      let wx = -1, wy = -1;\n      for (const [dx, dy] of adj) {\n        const nx = agentPos.x + dx, ny = agentPos.y + dy;\n        if (nx < 0 || nx >= 20 || ny < 0 || ny >= 20) continue;\n        if (prev.board[ny][nx].type === 'wumpus') {\n          hit = true;\n          wx = nx; wy = ny;\n          break;\n        }\n      }\n      arrows--;\n      log.push(`Agent shoots an arrow. Arrows left: ${arrows}`);\n      if (hit) {\n        // Remove Wumpus\n        const newBoard = board.map((row, j) =>\n          row.map((cell, i) => (i === wx && j === wy ? { ...cell, type: 'empty' as const } : cell))\n        );\n        log.push('Agent killed the Wumpus! WON!');\n        return { ...prev, board: newBoard, status: 'won', actionLog: log, agentState: agentState ? { ...agentState, arrows } : undefined };\n      } else {\n        log.push('Agent missed.');\n        return { ...prev, actionLog: log, agentState: agentState ? { ...agentState, arrows } : undefined };\n      }\n    });\n  };\n\n  // Keyboard event handler\n  React.useEffect(() => {\n    if (mode !== 'manual' || game.status !== 'playing') return;\n    const handleKeyDown = (e: KeyboardEvent) => {\n      if (e.repeat) return;\n      if (e.key === 'ArrowUp') handleManualMove(0, -1);\n      else if (e.key === 'ArrowDown') handleManualMove(0, 1);\n      else if (e.key === 'ArrowLeft') handleManualMove(-1, 0);\n      else if (e.key === 'ArrowRight') handleManualMove(1, 0);\n      else if (e.code === 'Space') handleManualShoot();\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [mode, game.status]);\n\n  return (\n    <div className=\"App\" style={{ display: 'flex', flexDirection: 'column', minHeight: '100vh', width: '100vw', alignItems: 'stretch' }}>\n      <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', justifyContent: 'flex-start', width: '100%', margin: '8px 0 0 0', paddingLeft: 32 }}>\n        <h1 style={{ fontSize: 28, margin: 0, flex: '0 0 auto' }}>Hunt the Wumpus</h1>\n        <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', marginLeft: 32, gap: 12 }}>\n          <Controls\n            onNewGame={handleNewGame}\n            onToggleMode={handleToggleMode}\n            mode={mode}\n            onStep={mode === 'auto' ? handleStep : undefined}\n            canStep={game.status === 'playing'}\n          />\n          {mode === 'auto' && (\n            <button\n              onClick={handleAutoPlay}\n              disabled={game.status !== 'playing'}\n              style={{ minWidth: 120, height: 28, fontSize: 15, borderRadius: 4, marginLeft: 4, marginRight: 4, padding: '0 12px', boxSizing: 'border-box', verticalAlign: 'middle' }}\n            >\n              {autoRunning ? 'Pause Auto' : 'Auto Play'}\n            </button>\n          )}\n        </div>\n      </div>\n      <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'center', alignItems: 'center', flex: 1, width: '100%', marginTop: 0 }}>\n        <div style={{ flex: '0 0 auto', display: 'flex', flexDirection: 'column', alignItems: 'center', marginRight: 32 }}>\n          <Stats game={game} />\n        </div>\n        <div style={{ flex: '0 0 auto', display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n          <Board game={game} />\n        </div>\n        <div style={{ flex: '0 0 auto', display: 'flex', flexDirection: 'column', alignItems: 'center', marginLeft: 32 }}>\n          <div style={{ background: '#222', color: '#fff', marginTop: 0, padding: 12, borderRadius: 8, maxHeight: 400, overflowY: 'auto', fontSize: 14, minWidth: 340, width: 340 }}>\n            <b>Action Log:</b>\n            <ul style={{ margin: 0, paddingLeft: 18 }}>\n              {log.slice(-18).map((entry, i) => {\n                let color = '#fff';\n                if (/WON!|killed the Wumpus|found the gold/i.test(entry)) color = '#00e676'; // green\n                else if (/Lost!|fell into a pit|encountered the Wumpus/i.test(entry)) color = '#ff7043'; // orange/red\n                else if (/warning|breeze|smell|hear flapping/i.test(entry)) color = '#b388ff'; // purple\n                else if (/shoots|arrow|teleport|carried by bats/i.test(entry)) color = '#4fc3f7'; // light blue\n                return (\n                  <li key={i} style={{ color }}>{entry}</li>\n                );\n              })}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}