{"ast":null,"code":"var _jsxFileName = \"/workspaces/HuntTheWumpus/hunt-the-wumpus-react/src/components/Board.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Cell from './Cell';\nimport './Board.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BOARD_SIZE = 20;\nconst Board = ({\n  game\n}) => {\n  _s();\n  const agentX = game.agentPos.x;\n  const agentY = game.agentPos.y;\n\n  // Track which cells have ever been visible (fog removed)\n  const [revealed, setRevealed] = React.useState(() => Array.from({\n    length: BOARD_SIZE\n  }, () => Array(BOARD_SIZE).fill(false)));\n\n  // Reset revealed state when a new game starts (when game object changes)\n  React.useEffect(() => {\n    // Reveal the agent's initial visible area immediately\n    const initial = Array.from({\n      length: BOARD_SIZE\n    }, () => Array(BOARD_SIZE).fill(false));\n    for (let dy = -2; dy <= 2; dy++) {\n      for (let dx = -2; dx <= 2; dx++) {\n        const x = agentX + dx;\n        const y = agentY + dy;\n        if (x >= 0 && x < BOARD_SIZE && y >= 0 && y < BOARD_SIZE) {\n          initial[y][x] = true;\n        }\n      }\n    }\n    setRevealed(initial);\n  }, [game]);\n  React.useEffect(() => {\n    setRevealed(prev => {\n      const updated = prev.map(row => [...row]);\n      for (let dy = -2; dy <= 2; dy++) {\n        for (let dx = -2; dx <= 2; dx++) {\n          const x = agentX + dx;\n          const y = agentY + dy;\n          if (x >= 0 && x < BOARD_SIZE && y >= 0 && y < BOARD_SIZE) {\n            updated[y][x] = true;\n          }\n        }\n      }\n      return updated;\n    });\n  }, [agentX, agentY]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board-container\",\n    style: {\n      position: 'relative'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'row',\n        marginLeft: 32\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: 24\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), Array.from({\n        length: BOARD_SIZE\n      }, (_, x) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: 40,\n          textAlign: 'center',\n          color: '#bbb',\n          fontSize: 13\n        },\n        children: x + 1\n      }, x, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'row'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column'\n        },\n        children: Array.from({\n          length: BOARD_SIZE\n        }, (_, y) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: 40,\n            width: 24,\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            color: '#bbb',\n            fontSize: 13\n          },\n          children: y + 1\n        }, y, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board\",\n        children: game.board.map((row, y) => row.map((cell, x) => {\n          // A cell is revealed if it has ever been in the visible area\n          const isRevealed = revealed[y][x];\n          // A cell is explored (walked path) if marked as explored in game.explored\n          const isExplored = cell.explored || game.explored[y][x];\n          const fogged = !isRevealed;\n          return /*#__PURE__*/_jsxDEV(Cell, {\n            type: cell.type,\n            explored: isExplored,\n            hasAgent: game.agentPos.x === x && game.agentPos.y === y,\n            fogged: fogged\n          }, `${x},${y}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this);\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(Board, \"VNIs0irNzUPA/suDe3dYpNxIpr8=\");\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","Cell","jsxDEV","_jsxDEV","BOARD_SIZE","Board","game","_s","agentX","agentPos","x","agentY","y","revealed","setRevealed","useState","Array","from","length","fill","useEffect","initial","dy","dx","prev","updated","map","row","className","style","position","children","display","flexDirection","marginLeft","width","fileName","_jsxFileName","lineNumber","columnNumber","_","textAlign","color","fontSize","height","alignItems","justifyContent","board","cell","isRevealed","isExplored","explored","fogged","type","hasAgent","_c","$RefreshReg$"],"sources":["/workspaces/HuntTheWumpus/hunt-the-wumpus-react/src/components/Board.tsx"],"sourcesContent":["import React from 'react';\nimport Cell from './Cell';\nimport { GameState } from '../utils/gameTypes';\nimport './Board.css';\n\nconst BOARD_SIZE = 20;\n\ninterface BoardProps {\n  game: GameState;\n}\n\nconst Board: React.FC<BoardProps> = ({ game }) => {\n  const agentX = game.agentPos.x;\n  const agentY = game.agentPos.y;\n\n  // Track which cells have ever been visible (fog removed)\n  const [revealed, setRevealed] = React.useState(() =>\n    Array.from({ length: BOARD_SIZE }, () => Array(BOARD_SIZE).fill(false))\n  );\n\n  // Reset revealed state when a new game starts (when game object changes)\n  React.useEffect(() => {\n    // Reveal the agent's initial visible area immediately\n    const initial = Array.from({ length: BOARD_SIZE }, () => Array(BOARD_SIZE).fill(false));\n    for (let dy = -2; dy <= 2; dy++) {\n      for (let dx = -2; dx <= 2; dx++) {\n        const x = agentX + dx;\n        const y = agentY + dy;\n        if (x >= 0 && x < BOARD_SIZE && y >= 0 && y < BOARD_SIZE) {\n          initial[y][x] = true;\n        }\n      }\n    }\n    setRevealed(initial);\n  }, [game]);\n\n  React.useEffect(() => {\n    setRevealed(prev => {\n      const updated = prev.map(row => [...row]);\n      for (let dy = -2; dy <= 2; dy++) {\n        for (let dx = -2; dx <= 2; dx++) {\n          const x = agentX + dx;\n          const y = agentY + dy;\n          if (x >= 0 && x < BOARD_SIZE && y >= 0 && y < BOARD_SIZE) {\n            updated[y][x] = true;\n          }\n        }\n      }\n      return updated;\n    });\n  }, [agentX, agentY]);\n\n  return (\n    <div className=\"board-container\" style={{ position: 'relative' }}>\n      {/* Column numbers */}\n      <div style={{ display: 'flex', flexDirection: 'row', marginLeft: 32 }}>\n        <div style={{ width: 24 }} />\n        {Array.from({ length: BOARD_SIZE }, (_, x) => (\n          <div key={x} style={{ width: 40, textAlign: 'center', color: '#bbb', fontSize: 13 }}>{x + 1}</div>\n        ))}\n      </div>\n      <div style={{ display: 'flex', flexDirection: 'row' }}>\n        {/* Row numbers and grid */}\n        <div style={{ display: 'flex', flexDirection: 'column' }}>\n          {Array.from({ length: BOARD_SIZE }, (_, y) => (\n            <div key={y} style={{ height: 40, width: 24, display: 'flex', alignItems: 'center', justifyContent: 'center', color: '#bbb', fontSize: 13 }}>{y + 1}</div>\n          ))}\n        </div>\n        <div className=\"board\">\n          {game.board.map((row, y) =>\n            row.map((cell, x) => {\n              // A cell is revealed if it has ever been in the visible area\n              const isRevealed = revealed[y][x];\n              // A cell is explored (walked path) if marked as explored in game.explored\n              const isExplored = cell.explored || game.explored[y][x];\n              const fogged = !isRevealed;\n              return (\n                <Cell\n                  key={`${x},${y}`}\n                  type={cell.type}\n                  explored={isExplored}\n                  hasAgent={game.agentPos.x === x && game.agentPos.y === y}\n                  fogged={fogged}\n                />\n              );\n            })\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Board;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}